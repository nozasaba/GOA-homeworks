2) ახსენით თუ რას ეწოდება Control Flow.
# control flow განსაზღვრავს როდის და რადროს უნდა შესრულდეს მოქმედება პროგრამაში
# 3) ჩამოწერეთ რამდენი კომპონენტისგან შედგება Control Flow და თითოეულს მიუწერეთ განმარტება.
#  Control Flow შედგება 4 კომპონენტისგან:
#  1 Sequence - მოქმედებების რიგითობა ანუ როგორ უნდა შესრულდეს კოდი.
#  2 Selection - არჩევანი ანუ როგორ უნდა აირჩიოს პროგრამამ ერთი მოქმედება მეორის ნაცვლად.
#  3 Iteration - გამეორება ანუ როგორ უნდა შესრულდეს მოქმედება რამდენჯერმე.
#  4 Exception Handling - შეცდომების დამუშავება ანუ როგორ უნდა მოიქცეს პროგრამა შეცდომის შემთხვევაში.

# 4) თქვენი სიტყვებით ახსენით თუ რას ეწოდება Algorithm.
#ალგორითმი არის რაღაცის მიმდევრობა, რარაცის დასაწყისი და დასასრული

# 5) მოიყვანეთ ალგორითმის 3 ნამდვილი ცხოვრების მაგალითი, 3-ც კი პროგრამირებიდან.
# 1. რეცეპტი - რეცეპტი არის ალგორითმი
# 2. მანქანის მართვა - მანქანის მართვა არის ალგორითმი
# 3. პროგრამის შექმნა - პროგრამის შექმნა არის ალგორითმი
# 1.
# number = int(input("შეიყვანე რიცხვი: "))
# if number % 2 == 0:
#     print("ლუწი")
# else:
#     print("კენტი")
# # 2.
# a = int(input("num 1: "))
# b = int(input("num 2: "))
# c = int(input("num 3: "))
# max_num = a
# if b > max_num:
#     max_num = b
# if c > max_num:
#     max_num = c

# print(max_num)
# 6) ჩამოწერეთ რამდენი ტიპის ალგორითმი არსებობს და თითოეულს მიუწერეთ განმარტება
# ალგორითმები შეიძლება იყოს:
# 1. დადგენითი - ალგორითმი, რომელიც ადგენს კონკრეტულ შედეგს.
# 2. არადადგენითი - ალგორითმი, რომელიც არ ადგენს კონკრეტულ შედეგს.
# 3. რეცურსული - ალგორითმი, რომელიც იყენებს თავის თავს.
# 4. არარეცურსული - ალგორითმი, რომელიც არ იყენებს თავის თავს
# 5. ხაზოვანი - ალგორითმი, რომელიც მუშაობს ხაზის მიხედვით.
# 6. არახაზოვანი - ალგორითმი, რომელიც არ მუშაობს ხაზის მიხედვით.
# 7) Control Flow და მისი შემადგენელი ნაწილები და Algorithm მისი შემადგენელი ნაწილებით გამოხასეთ FlowChart-ის სახით
#cant